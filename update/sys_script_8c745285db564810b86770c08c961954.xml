<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_attachment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_attachment">table_name=x_naci_family_coho_fcsms_consent^ORtable_name=x_naci_family_coho_fcsms_mrr_consent^EQ<item endquery="false" field="table_name" goto="false" newquery="false" operator="=" or="false" value="x_naci_family_coho_fcsms_consent"/>
            <item endquery="false" field="table_name" goto="false" newquery="false" operator="=" or="true" value="x_naci_family_coho_fcsms_mrr_consent"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Copy Attachment to Family Member Record</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var getRec = new GlideRecord(current.table_name);
	if (getRec.get(current.table_sys_id)){

		copyAttachment(getRec.family_member.toString());

	}

	function copyAttachment(id){

		var copyToFamRec = new GlideRecord ('x_naci_family_coho_family_history_details');
		copyToFamRec.addQuery('sys_id', id);
		copyToFamRec.query();

		if (copyToFamRec.next()){

			if (current.table_name == 'x_naci_family_coho_fcsms_consent'){
				copyToFamRec.enrollment_status = 'awaiting_pi_signature';
				copyToFamRec.consent_signed = true;
			} else {
				copyToFamRec.mrr_complete = true;
			}

			copyToFamRec.update();
			GlideSysAttachment.copy(current.table_name, current.table_sys_id, 'x_naci_family_coho_family_history_details', copyToFamRec.sys_id);
		}

	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>martincp@nih.gov</sys_created_by>
        <sys_created_on>2020-01-10 20:49:06</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>8c745285db564810b86770c08c961954</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Copy Attachment to Family Member Record</sys_name>
        <sys_overrides/>
        <sys_package display_value="Family Cohort Study" source="x_naci_family_coho">090e9eb7dba7774054d8ff621f9619eb</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Family Cohort Study">090e9eb7dba7774054d8ff621f9619eb</sys_scope>
        <sys_update_name>sys_script_8c745285db564810b86770c08c961954</sys_update_name>
        <sys_updated_by>martincp@nih.gov</sys_updated_by>
        <sys_updated_on>2020-02-06 19:22:46</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
